const {
  register_User_has_Group,
  find_Users_of_Group,
  find_Groups_of_User,
  patch_Users_Has_Groups,
} = require("@services/userHasGroupServices");

const postUsers_Group = async (req, res) => {
  try {
    const { idGroup, userIds } = req.body;

    if (!idGroup || !Array.isArray(userIds) || userIds.length === 0) {
      return res.status(400).json({ error: "Invalid input data" });
    }

    const result = await register_User_has_Group(userIds, idGroup);
    res.status(200).json(result);
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: err.message });
  }
};

const getUsers_Of_Group = async (req, res) => {
  try {
    const result = await find_Users_of_Group(req.params.id_group);
    if (result.length > 0) {
      res.status(200).json(result);
    } else {
      throw new Error("Group without users");
    }
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: err.message });
  }
};

const getGroup_Of_User = async (req, res) => {
  try {
    const result = await find_Groups_of_User(req.params.id_user);
    if (result.length > 0) {
      res.status(200).json(result);
    } else {
      throw new Error("User without GROUPS");
    }
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: err.message });
  }
};

const change_User_Has_Group = async (req, res) => {
  try {
    const { groupId, usersIn, usersOut } = req.body;

    if (
      !groupId ||
      !Array.isArray(usersIn) ||
      !Array.isArray(usersOut) ||
      usersIn.length === 0 ||
      usersOut.length === 0
    ) {
      return res.status(400).json({ error: "Invalid input data" });
    }

    const result = await patch_Users_Has_Groups(groupId, usersIn, usersOut);
    res.status(200).json(result);
  } catch (err) {
    console.error(err);
    res.status(500).json({ error: err.message });
  }
};

module.exports = {
  postUsers_Group,
  getUsers_Of_Group,
  getGroup_Of_User,
  change_User_Has_Group,
};
